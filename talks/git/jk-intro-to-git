Intro to Git (PHP Meetup)

Introduction
  - How many use git or have heard of it
  - Who I am, what I do with git

What is git?
  - Snapshot management
    - Each "commit" is a snapshot of the tree instead of patches
  - Distributed
    - Everybody gets a complete copy.
    - Awesome for offline use
    - Awesome for contributors to collaborate
  - Designed around multiple contributors
    - Tools to easy pass changes around
      - git send-email
      - git pull
      - git format-patch / git am
    - Differentiate between author and committer (and pusher, not recorded)
      - git signed-off-by
  - Why git vs ???
    - Why git is better than X .com

Getting Started
  Show the similar command in other SCMs (ask for help here)
  - git init (use proj1)
    - CVSROOT=somewhere cvs init
  - git status
    - kinda like cvs status
  - git add (add file1)
    - Used to add new files, and to stage changes (gloss over stage)
    - cvs add
    - show git status again
  - git commit
    - cvs commit
    - Briefly cover commit message styles.
  - git log
    - kinda like cvs log, but so much more usable.
  - git show
    - can also do git log -p
  - git clone (clone to working/proj1)
    - cvs checkout, kinda
  - edit and git diff
    - cvs diff -u
  - git commit (without options, explain)


  - git pull (pull from working dir)


  - Sharing with bare repo
    - git clone --bare
    - naming convention of foo.git
    - no checked out files
    - git push ( use a new clone of new bare repo)
    - commit
    - git status shows origin/master
    - like CVS commit
    - push with -n
    - show git log in share repo


  - git tag
    - much like cvs tag
• can have a gpg key
• lightweight vs annotated with a message

Collaborating
  - git checkout -b (from work proj1)
    - like cvs tag -b and cvs checkout/update -r
    - Create a newfiles branch
    - Add a couple files
    - show git diff not showing anything (ask audience)
    - git add .
    - git commit, make it multiline
    - Switch between branches with git checkout <branch>
    - git diff master

  - git format-patch
    - Digress a bit about describing commits and ranges
    - Show git diff master
    - Show git diff HEAD^
    - Show git diff @{1}
    - git format-patch master
    - Show the file
      - Has context, as well as content.
      - Now we see why the format of commit messages
    - Try to apply to original proj1
  - git am -s
    - Show the git log
    - Talk about signed-off-by a bit.
  - git send-email
    - can take a file name, or directly from the repo
    - git send-email --to jkeating@fedoraproject.org master
    - Show in evolution
      - can save to a file, and git am, or reply for conversation
  - git apply
    - works with raw diffs
    - Misses author info
  - git cherry-pick
    - Commit something new in the branch
    - Cherrypick it over to master



Getting Clever
  - git blame
    - show on a real tree like anaconda
    - like cvs annotate, only better!


  - git stash
    - Edit something
    - Stash it.
    - Edit more things, commit, push
    - git stash apply


  - git commit --interactive
    - Make multiple changes to a file with changes around existing content.
    - patch update
    - pick the file
    - s for smaller chunk
    - y to pick that hunk
    - q to finish up
    - 7 to quit
  - rebasing
    - git rebase
      - edit on branch
      - edit on master
      - git rebase master
    - git pull --rebase
      - edit another checkout
      - push from first checkout
      - pull --rebase on second checkout
    - git rebase -i
      - Throw some more changes in to newfiles branch
      -  git rebase -i re-order and squash
  - git bisect
    - helps to find a bad commit
    - from newfiles do git bisect start
    - git bisect bad
    - git bisect good many commits ago
    - start walking through marking good or bad.

Conflict Resolution
  - create another branch
  - on newfiles change file1
  - on new branch change file1 also in a conflicting way
  - on new branch change file3
  - on newfiles git merge newbranch
  - git status and git diff
  - Resolve the conflict git add file1
  - git commit
  - git log

Converting from CVS/SVN
  - lots of tools exist, need to have a plan
    - What to do with authors
    - How to treat branches
    - Any tag conversions
    - Permissions issues

Git for admins
  - git:// http:// ssh://
  - gitweb
  - ACLs
  - Branches vs Separate Repos
  - Useful Addons
  - Hooks!
